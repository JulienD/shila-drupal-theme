/**
 * @file
 * sass/layout.scss
 *
 * CSS rules that layout a page.
 */
/**
 * @file
 * sass/partials/common/_imports.scss
 *
 * Importing this file should not generate any CSS.
 */
/**
 * @file
 * sass/partials/common/_variables.scss
 *
 * Based on http://bitters.bourbon.io/
 */
/**
 * @file
 * sass/partials/common/_placeholders.scss
 */
.page__content {
  padding-left: 5%;
  padding-right: 5%;
}

.region--content {
  max-width: 32rem;
  margin-left: auto;
  margin-right: auto;
}

/**
 * @file
 * sass/partials/layout/templates/_global.scss
 *
 * @see page.html.twig
 */
.page {
  padding-bottom: 4rem;
}

/**
 * @file
 * sass/partials/layout/templates/_off-canvas.scss
 *
 * Pure CSS (no JavaScript required) implementation.
 * Layout styles only in this file.
 * Uses Neat grid framework media mixin.
 *
 * @see page.html.twig
 */
#off-canvas-label, .off-canvas, .page {
  -webkit-transition-property: left;
  -moz-transition-property: left;
  transition-property: left;
  -webkit-transition-duration: 0.4s;
  -moz-transition-duration: 0.4s;
  transition-duration: 0.4s;
}

#off-canvas-checkbox,
#off-canvas-label,
.off-canvas {
  display: none;
}

.off-canvas-hidden {
  display: block;
}

.layout-container {
  width: 100%;
  height: 100%;
  overflow-x: hidden;
}

#off-canvas-checkbox {
  display: block;
  position: absolute;
  top: -9999px;
  left: -9999px;
}

#off-canvas-label {
  display: block;
  position: fixed;
  left: 0;
  z-index: 501;
  width: 64px;
  height: 64px;
  padding: 10px;
  background-position: 10px 10px;
  background-size: 44px 44px;
  background-repeat: no-repeat;
  background-image: url("../images/menu.png");
  background-image: url("../images/menu.svg");
  cursor: pointer;
}

.off-canvas {
  display: block;
  position: fixed;
  min-height: 100%;
  overflow: hidden;
  overflow-y: auto;
}

@media (max-width: 524px) {
  .off-canvas {
    left: -80%;
    width: 80%;
  }
}

@media (min-width: 525px) {
  .off-canvas {
    left: -20rem;
    width: 20rem;
  }
}

@media (min-width: 801px) {
  .off-canvas {
    left: -20rem;
    width: 20rem;
  }
}

@media (min-width: 1025px) {
  .off-canvas {
    left: -20rem;
    width: 20rem;
  }
}

.off-canvas-hidden {
  display: none;
}

.page {
  position: absolute;
  left: 0;
  width: 100%;
  height: auto;
  overflow: visible;
}

.page__header {
  position: fixed;
  z-index: 500;
  height: 4rem;
}

.page__content {
  margin-top: 4rem;
}

#off-canvas-checkbox:checked ~ .page {
  position: fixed;
  height: 100%;
  overflow: hidden;
}

#off-canvas-checkbox:checked ~ .page .page__header {
  position: static;
}

#off-canvas-checkbox:checked ~ .page .page__content {
  margin-top: 0;
}

@media (max-width: 524px) {
  #off-canvas-checkbox:checked ~ #off-canvas-label,
  #off-canvas-checkbox:checked ~ .page {
    left: 80%;
  }
}

@media (min-width: 525px) {
  #off-canvas-checkbox:checked ~ #off-canvas-label,
  #off-canvas-checkbox:checked ~ .page {
    left: 20rem;
  }
}

@media (min-width: 801px) {
  #off-canvas-checkbox:checked ~ #off-canvas-label,
  #off-canvas-checkbox:checked ~ .page {
    left: 20rem;
  }
}

@media (min-width: 1025px) {
  #off-canvas-checkbox:checked ~ #off-canvas-label,
  #off-canvas-checkbox:checked ~ .page {
    left: 20rem;
  }
}

#off-canvas-checkbox:checked ~ .off-canvas {
  left: 0;
}

/**
 * @file
 * sass/partials/layout/templates/_page--front.scss
 *
 * @see page.html.twig
 */
.page--front {
  padding-bottom: 1rem;
}

.page--front .comment-add {
  display: none;
}

.view--frontpage .views-row + .views-row {
  margin-top: 4rem;
}

/*# sourceMappingURL=data:application/json;base64, */
