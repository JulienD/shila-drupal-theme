/**
 * @file
 * sass/layout.scss
 *
 * CSS rules that layout a page.
 */
/**
 * @file
 * sass/partials/common/_imports.scss
 *
 * Importing this file should not generate any CSS.
 */
/**
 * @file
 * sass/partials/common/_variables.scss
 *
 * Based on http://bitters.bourbon.io/
 */
/**
 * @file
 * sass/partials/common/_placeholders.scss
 */
.page__content {
  padding-left: 5%;
  padding-right: 5%;
}

.region--content {
  max-width: 32rem;
  margin-left: auto;
  margin-right: auto;
}

/**
 * @file
 * sass/partials/layout/templates/_global.scss
 *
 * @see page.html.twig
 */
.page {
  padding-bottom: 4rem;
}

/**
 * @file
 * sass/partials/layout/templates/_off-canvas.scss
 *
 * Pure CSS (no JavaScript required) implementation.
 * Layout styles only in this file.
 * Uses Neat grid framework media mixin.
 *
 * @see page.html.twig
 */
#off-canvas-label, .off-canvas, .page {
  -webkit-transition-property: left;
  -moz-transition-property: left;
  transition-property: left;
  -webkit-transition-duration: 0.4s;
  -moz-transition-duration: 0.4s;
  transition-duration: 0.4s;
}

#off-canvas-checkbox,
#off-canvas-label,
.off-canvas {
  display: none;
}

.off-canvas-hidden {
  display: block;
}

.layout-container {
  width: 100%;
  height: 100%;
  overflow-x: hidden;
}

#off-canvas-checkbox {
  display: block;
  position: absolute;
  top: -9999px;
  left: -9999px;
}

#off-canvas-label {
  display: block;
  position: fixed;
  left: 0;
  z-index: 501;
  width: 64px;
  height: 64px;
  padding: 10px;
  background-position: 10px 10px;
  background-size: 44px 44px;
  background-repeat: no-repeat;
  background-image: url("../images/menu.png");
  background-image: url("../images/menu.svg");
  cursor: pointer;
}

.off-canvas {
  display: block;
  position: fixed;
  min-height: 100%;
  overflow: hidden;
  overflow-y: auto;
}

@media (max-width: 524px) {
  .off-canvas {
    left: -80%;
    width: 80%;
  }
}

@media (min-width: 525px) {
  .off-canvas {
    left: -20rem;
    width: 20rem;
  }
}

@media (min-width: 801px) {
  .off-canvas {
    left: -20rem;
    width: 20rem;
  }
}

@media (min-width: 1025px) {
  .off-canvas {
    left: -20rem;
    width: 20rem;
  }
}

.off-canvas-hidden {
  display: none;
}

.page {
  position: absolute;
  left: 0;
  width: 100%;
  height: auto;
  overflow: visible;
}

.page__header {
  position: fixed;
  z-index: 500;
  height: 4rem;
}

#off-canvas-checkbox:checked ~ .page {
  position: fixed;
  height: 100%;
  overflow: hidden;
}

@media (max-width: 524px) {
  #off-canvas-checkbox:checked ~ #off-canvas-label,
  #off-canvas-checkbox:checked ~ .page {
    left: 80%;
  }
}

@media (min-width: 525px) {
  #off-canvas-checkbox:checked ~ #off-canvas-label,
  #off-canvas-checkbox:checked ~ .page {
    left: 20rem;
  }
}

@media (min-width: 801px) {
  #off-canvas-checkbox:checked ~ #off-canvas-label,
  #off-canvas-checkbox:checked ~ .page {
    left: 20rem;
  }
}

@media (min-width: 1025px) {
  #off-canvas-checkbox:checked ~ #off-canvas-label,
  #off-canvas-checkbox:checked ~ .page {
    left: 20rem;
  }
}

#off-canvas-checkbox:checked ~ .off-canvas {
  left: 0;
}

.page__content {
  margin-top: 8rem;
}

#off-canvas-checkbox:checked ~ .page .page__header {
  position: static;
}

#off-canvas-checkbox:checked ~ .page .page__content {
  margin-top: 4rem;
}

/**
 * @file
 * sass/partials/layout/templates/_page--front.scss
 *
 * @see page.html.twig
 */
.page--front {
  padding-bottom: 1rem;
}

.page--front .comment-add {
  display: none;
}

.view--frontpage .views-row + .views-row {
  margin-top: 4rem;
}

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxheW91dC5zY3NzIiwicGFydGlhbHMvY29tbW9uL19pbXBvcnRzLnNjc3MiLCJwYXJ0aWFscy9jb21tb24vX3ZhcmlhYmxlcy5zY3NzIiwicGFydGlhbHMvY29tbW9uL19wbGFjZWhvbGRlcnMuc2NzcyIsInBhcnRpYWxzL2xheW91dC90ZW1wbGF0ZXMvX2dsb2JhbC5zY3NzIiwicGFydGlhbHMvbGF5b3V0L3RlbXBsYXRlcy9fb2ZmLWNhbnZhcy5zY3NzIiwiLi4vYm93ZXJfY29tcG9uZW50cy9ib3VyYm9uL2FwcC9hc3NldHMvc3R5bGVzaGVldHMvY3NzMy9fdHJhbnNpdGlvbi5zY3NzIiwiLi4vYm93ZXJfY29tcG9uZW50cy9ib3VyYm9uL2FwcC9hc3NldHMvc3R5bGVzaGVldHMvYWRkb25zL19wcmVmaXhlci5zY3NzIiwiLi4vYm93ZXJfY29tcG9uZW50cy9icmVha3BvaW50LXNhc3Mvc3R5bGVzaGVldHMvX2JyZWFrcG9pbnQuc2NzcyIsInBhcnRpYWxzL2xheW91dC90ZW1wbGF0ZXMvX3BhZ2UtLWZyb250LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0dBS0c7QUNMSDs7Ozs7R0FLRztBQ0xIOzs7OztHQUtHO0FDTEg7OztHQUdHO0FDT0gsY0FBYyxDRExDO0VBQ2IsWUFBWSxFQUFFLEVBQVk7RUFDMUIsYUFBYSxFQUFFLEVBQVk7Q0FDNUI7O0FDS0QsZ0JBQWdCLENESkM7RUFDZixTQUFTLEVENkJDLEtBQUs7RUM1QmYsV0FBVyxFQUFFLElBQUs7RUFDbEIsWUFBWSxFQUFFLElBQUs7Q0FDcEI7O0FDYkQ7Ozs7O0dBS0c7QUFFSCxLQUFLLENBQUM7RUFDSixjQUFjLEVBQUUsSUFBSztDQUN0Qjs7QUNURDs7Ozs7Ozs7O0dBU0c7QUFxQkQsaUJBQWlCLEVBZ0JqQixXQUFXLEVBaUJYLEtBQUssQ0E4RFc7RUN2RWhCLDJCQUEyQixFRHRDWCxJQUFJO0VDdUNqQix3QkFBd0IsRUR2Q1gsSUFBSTtFQ3dDWixtQkFBbUIsRUR4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LENBQUM7SUFHSixJQUFtQixFQTNFTCxLQUFLO0dBOEV4Qjs7O0FHM0JELE1BQU0sRUFBSixTQUFTLEVBQUUsS0FBSztFSGNwQixvQkFBb0IsUUFBUSxHQU10QixpQkFBaUI7RUFOdkIsb0JBQW9CLFFBQVEsR0FPdEIsS0FBSyxDQUFDO0lBR0osSUFBbUIsRUEzRUMsS0FBSztHQThFOUI7OztBRzNCRCxNQUFNLEVBQUosU0FBUyxFQUFFLE1BQU07RUhjckIsb0JBQW9CLFFBQVEsR0FNdEIsaUJBQWlCO0VBTnZCLG9CQUFvQixRQUFRLEdBT3RCLEtBQUssQ0FBQztJQUdKLElBQW1CLEVBM0VPLEtBQUs7R0E4RXBDOzs7QUFiSCxvQkFBb0IsUUFBUSxHQWN0QixXQUFXLENBQUM7RUFDZCxJQUFtQixFQUFFLENBQUU7Q0FDeEI7O0FBSUgsY0FBYyxDQUFDO0VBQ2IsVUFBVSxFQUFFLElBQXlCO0NBQ3RDOztBQUNELG9CQUFvQixRQUFRLEdBQ3RCLEtBQUssQ0FDUCxhQUFhLENBQUM7RUFDWixRQUFRLEVBQUUsTUFBTztDQUNsQjs7QUFKTCxvQkFBb0IsUUFBUSxHQUN0QixLQUFLLENBSVAsY0FBYyxDQUFDO0VBQ2IsVUFBVSxFQTdGUyxJQUFJO0NBOEZ4Qjs7QUk1R1A7Ozs7O0dBS0c7QUFFSCxZQUFZLENBQUM7RUFDWCxjQUFjLEVBQUUsSUFBSztDQUl0Qjs7QUFMRCxZQUFZLENBRVYsWUFBWSxDQUFDO0VBQ1gsT0FBTyxFQUFFLElBQUs7Q0FDZjs7QUFFSCxnQkFBZ0IsQ0FDZCxVQUFVLEdBQUcsVUFBVSxDQUFDO0VBQ3RCLFVBQVUsRUFBRSxJQUFLO0NBQ2xCIiwiZmlsZSI6ImxheW91dC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlXG4gKiBzYXNzL2xheW91dC5zY3NzXG4gKlxuICogQ1NTIHJ1bGVzIHRoYXQgbGF5b3V0IGEgcGFnZS5cbiAqL1xuXG5AaW1wb3J0IFwicGFydGlhbHMvY29tbW9uL2ltcG9ydHNcIjtcbkBpbXBvcnQgXCJwYXJ0aWFscy9sYXlvdXQvdGVtcGxhdGVzL2dsb2JhbFwiO1xuQGltcG9ydCBcInBhcnRpYWxzL2xheW91dC90ZW1wbGF0ZXMvb2ZmLWNhbnZhc1wiO1xuQGltcG9ydCBcInBhcnRpYWxzL2xheW91dC90ZW1wbGF0ZXMvcGFnZS0tZnJvbnRcIjtcbiIsIi8qKlxuICogQGZpbGVcbiAqIHNhc3MvcGFydGlhbHMvY29tbW9uL19pbXBvcnRzLnNjc3NcbiAqXG4gKiBJbXBvcnRpbmcgdGhpcyBmaWxlIHNob3VsZCBub3QgZ2VuZXJhdGUgYW55IENTUy5cbiAqL1xuXG5AaW1wb3J0IFwiY29tcGFzcy91dGlsaXRpZXNcIjtcbkBpbXBvcnQgXCJib3VyYm9uXCI7XG5AaW1wb3J0IFwic2luZ3VsYXJpdHlnc1wiO1xuQGltcG9ydCBcImJyZWFrcG9pbnRcIjtcbkBpbXBvcnQgXCJwYXJ0aWFscy9jb21tb24vdmFyaWFibGVzXCI7XG5AaW1wb3J0IFwicGFydGlhbHMvY29tbW9uL3BsYWNlaG9sZGVyc1wiO1xuIiwiLyoqXG4gKiBAZmlsZVxuICogc2Fzcy9wYXJ0aWFscy9jb21tb24vX3ZhcmlhYmxlcy5zY3NzXG4gKlxuICogQmFzZWQgb24gaHR0cDovL2JpdHRlcnMuYm91cmJvbi5pby9cbiAqL1xuXG4vLyBDb2x1bW5zXG4keHMtY29sczogNDtcbiRzLWNvbHM6IDg7XG4kbS1jb2xzOiAxMjtcbiRsLWNvbHM6IDE2O1xuJGNvbHMtbGlzdDogKCR4cy1jb2xzICRzLWNvbHMgJG0tY29scyAkbC1jb2xzKTtcblxuLy8gQnJlYWtwb2ludHNcbiR4cy1icmVhazogbWF4LXdpZHRoIDUyNHB4O1xuJHMtYnJlYWs6IDUyNXB4O1xuJG0tYnJlYWs6IDgwMXB4O1xuJGwtYnJlYWs6IDEwMjVweDtcbiRicmVha3MtbGlzdDogKCR4cy1icmVhayAkcy1icmVhayAkbS1icmVhayAkbC1icmVhayk7XG5cbi8vIFR5cG9ncmFwaHlcbiRiYXNlLWZvbnQtZmFtaWx5OiAkaGVsdmV0aWNhO1xuJGhlYWRpbmctZm9udC1mYW1pbHk6ICRiYXNlLWZvbnQtZmFtaWx5O1xuXG4vLyBGb250IFNpemVzXG4kYmFzZS1mb250LXNpemU6ICgxOHB4LCAyMHB4LCAyMHB4LCAyMHB4KTtcblxuLy8gTGluZSBoZWlnaHRcbi8vIGh0dHA6Ly9tZXllcndlYi5jb20vZXJpYy90aG91Z2h0cy8yMDA2LzAyLzA4L3VuaXRsZXNzLWxpbmUtaGVpZ2h0cy9cbiRiYXNlLWxpbmUtaGVpZ2h0OiAxLjY7XG4kaGVhZGluZy1saW5lLWhlaWdodDogMS4yO1xuXG4vLyBPdGhlciBTaXplc1xuJGJhc2UtYm9yZGVyLXJhZGl1czogM3B4O1xuJGJhc2Utc3BhY2luZzogJGJhc2UtbGluZS1oZWlnaHQgKiAxZW07XG4kc21hbGwtc3BhY2luZzogJGJhc2Utc3BhY2luZyAvIDI7XG4kYmFzZS16LWluZGV4OiAwO1xuJHNpZGUtbWFyZ2luOiAxMDtcbiRtYXgtd2lkdGg6IDMycmVtO1xuJGd1dHRlcjogMS8zO1xuXG4vLyBDb2xvcnNcbiR3aGl0ZTogI2ZlZmVmZTtcbiRibHVlOiAjMTU2NWMwO1xuJGRhcmstZ3JheTogIzMzMztcbiRtZWRpdW0tZ3JheTogIzk5OTtcbiRsaWdodC1ncmF5OiAjZGRkO1xuXG4vLyBGb250IENvbG9yc1xuJGJhc2UtZm9udC1jb2xvcjogJGRhcmstZ3JheTtcbiRhY3Rpb24tY29sb3I6ICRibHVlO1xuXG4vLyBCb3JkZXJcbiRiYXNlLWJvcmRlci1jb2xvcjogJGxpZ2h0LWdyYXk7XG4kYmFzZS1ib3JkZXI6IDFweCBzb2xpZCAkYmFzZS1ib3JkZXItY29sb3I7XG5cbi8vIEJhY2tncm91bmQgQ29sb3JzXG4kYmFzZS1iYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGU7XG4kc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3I6IHRpbnQoJGJhc2UtYm9yZGVyLWNvbG9yLCA3NSUpO1xuXG4vLyBGb3Jtc1xuJGZvcm0tYm94LXNoYWRvdzogaW5zZXQgMCAxcHggM3B4IHJnYmEoIzAwMCwgMC4wNik7XG4kZm9ybS1ib3gtc2hhZG93LWZvY3VzOiAkZm9ybS1ib3gtc2hhZG93LCAwIDAgNXB4IGFkanVzdC1jb2xvcigkYWN0aW9uLWNvbG9yLCAkbGlnaHRuZXNzOiAtNSUsICRhbHBoYTogLTAuMyk7XG5cbi8vIEFuaW1hdGlvbnNcbiRiYXNlLWR1cmF0aW9uOiAxNTBtcztcbiRiYXNlLXRpbWluZzogZWFzZTtcblxuLy8gT2ZmIGNhbnZhc1xuJG9mZi1jYW52YXMtaW4tdXNlOiB0cnVlO1xuJG9mZi1jYW52YXMtbm90LWluLXVzZTogZmFsc2U7XG4iLCIvKipcbiAqIEBmaWxlXG4gKiBzYXNzL3BhcnRpYWxzL2NvbW1vbi9fcGxhY2Vob2xkZXJzLnNjc3NcbiAqL1xuXG4lc2lkZS1wYWRkaW5ncyB7XG4gIHBhZGRpbmctbGVmdDogJHNpZGUtbWFyZ2luIC8gMiAqIDElO1xuICBwYWRkaW5nLXJpZ2h0OiAkc2lkZS1tYXJnaW4gLyAyICogMSU7XG59XG4lb3V0ZXItY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiAkbWF4LXdpZHRoO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xufVxuIiwiLyoqXG4gKiBAZmlsZVxuICogc2Fzcy9wYXJ0aWFscy9sYXlvdXQvdGVtcGxhdGVzL19nbG9iYWwuc2Nzc1xuICpcbiAqIEBzZWUgcGFnZS5odG1sLnR3aWdcbiAqL1xuXG4ucGFnZSB7XG4gIHBhZGRpbmctYm90dG9tOiA0cmVtO1xufVxuLnBhZ2VfX2NvbnRlbnQge1xuICBAZXh0ZW5kICVzaWRlLXBhZGRpbmdzO1xufVxuLnJlZ2lvbi0tY29udGVudCB7XG4gIEBleHRlbmQgJW91dGVyLWNvbnRhaW5lcjtcbn1cbiIsIi8qKlxuICogQGZpbGVcbiAqIHNhc3MvcGFydGlhbHMvbGF5b3V0L3RlbXBsYXRlcy9fb2ZmLWNhbnZhcy5zY3NzXG4gKlxuICogUHVyZSBDU1MgKG5vIEphdmFTY3JpcHQgcmVxdWlyZWQpIGltcGxlbWVudGF0aW9uLlxuICogTGF5b3V0IHN0eWxlcyBvbmx5IGluIHRoaXMgZmlsZS5cbiAqIFVzZXMgTmVhdCBncmlkIGZyYW1ld29yayBtZWRpYSBtaXhpbi5cbiAqXG4gKiBAc2VlIHBhZ2UuaHRtbC50d2lnXG4gKi9cblxuJG9mZi1jYW52YXMtaW4tdXNlOiAkeHMtYnJlYWsgIWRlZmF1bHQ7XG4kb2ZmLWNhbnZhcy1ub3QtaW4tdXNlOiAkcy1icmVhayAhZGVmYXVsdDtcbiRvZmYtY2FudmFzLXdpZHRoOiAoODAlIDIwcmVtIDIwcmVtIDIwcmVtKSAhZGVmYXVsdDtcbiRvZmYtY2FudmFzLWhlYWRlci1oZWlnaHQ6IDRyZW0gIWRlZmF1bHQ7XG4kb2ZmLWNhbnZhcy16LWluZGV4OiA1MDAgIWRlZmF1bHQ7XG4kb2ZmLWNhbnZhcy1zaWRlOiBsZWZ0ICFkZWZhdWx0O1xuXG5AbWl4aW4gb2ZmLWNhbnZhcy1pbi11c2UtcnVsZXMoKSB7XG4gIC5sYXlvdXQtY29udGFpbmVyIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgb3ZlcmZsb3cteDogaGlkZGVuO1xuICB9XG4gICNvZmYtY2FudmFzLWNoZWNrYm94IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAtOTk5OXB4O1xuICAgIGxlZnQ6IC05OTk5cHg7XG4gIH1cbiAgI29mZi1jYW52YXMtbGFiZWwge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAjeyRvZmYtY2FudmFzLXNpZGV9OiAwO1xuICAgIHotaW5kZXg6ICRvZmYtY2FudmFzLXotaW5kZXggKyAxO1xuICAgIHdpZHRoOiA2NHB4O1xuICAgIGhlaWdodDogNjRweDtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IDEwcHggMTBweDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IDQ0cHggNDRweDtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vaW1hZ2VzL21lbnUucG5nJyk7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi9pbWFnZXMvbWVudS5zdmcnKTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgQGV4dGVuZCAlb2ZmLWNhbnZhcy1zbGlkZTtcbiAgfVxuICAub2ZmLWNhbnZhcyB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIG1pbi1oZWlnaHQ6IDEwMCU7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBvdmVyZmxvdy15OiBhdXRvO1xuICAgIEBleHRlbmQgJW9mZi1jYW52YXMtc2xpZGU7XG4gICAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCA0IHtcbiAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQobnRoKCRicmVha3MtbGlzdCwgJGkpKSB7XG4gICAgICAgICN7JG9mZi1jYW52YXMtc2lkZX06IC0obnRoKCRvZmYtY2FudmFzLXdpZHRoLCAkaSkpO1xuICAgICAgICB3aWR0aDogbnRoKCRvZmYtY2FudmFzLXdpZHRoLCAkaSk7O1xuICAgICAgfVxuICAgIH1cbiAgfVxuICAub2ZmLWNhbnZhcy1oaWRkZW4ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLnBhZ2Uge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogYXV0bztcbiAgICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgICBAZXh0ZW5kICVvZmYtY2FudmFzLXNsaWRlO1xuICB9XG4gIC5wYWdlX19oZWFkZXIge1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB6LWluZGV4OiAkb2ZmLWNhbnZhcy16LWluZGV4O1xuICAgIGhlaWdodDogJG9mZi1jYW52YXMtaGVhZGVyLWhlaWdodDtcbiAgfVxuXG4gIC8vIE9mZiBjYW52YXMgaW4gdXNlIGFuZCB2aXNpYmxlLlxuICAjb2ZmLWNhbnZhcy1jaGVja2JveDpjaGVja2VkIHtcbiAgICAmIH4gLnBhZ2Uge1xuICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB9XG4gICAgJiB+ICNvZmYtY2FudmFzLWxhYmVsLFxuICAgICYgfiAucGFnZSB7XG4gICAgICBAZm9yICRpIGZyb20gMSB0aHJvdWdoIDQge1xuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50KG50aCgkYnJlYWtzLWxpc3QsICRpKSkge1xuICAgICAgICAgICN7JG9mZi1jYW52YXMtc2lkZX06IG50aCgkb2ZmLWNhbnZhcy13aWR0aCwgJGkpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgICYgfiAub2ZmLWNhbnZhcyB7XG4gICAgICAjeyRvZmYtY2FudmFzLXNpZGV9OiAwO1xuICAgIH1cbiAgfVxuXG4gIC8vIEZpeCBmb3IgRmlyZWZveCBwYWludCBidWcuXG4gIC5wYWdlX19jb250ZW50IHtcbiAgICBtYXJnaW4tdG9wOiAkb2ZmLWNhbnZhcy1oZWFkZXItaGVpZ2h0ICogMjtcbiAgfVxuICAjb2ZmLWNhbnZhcy1jaGVja2JveDpjaGVja2VkIHtcbiAgICAmIH4gLnBhZ2Uge1xuICAgICAgLnBhZ2VfX2hlYWRlciB7XG4gICAgICAgIHBvc2l0aW9uOiBzdGF0aWM7XG4gICAgICB9XG4gICAgICAucGFnZV9fY29udGVudCB7XG4gICAgICAgIG1hcmdpbi10b3A6ICRvZmYtY2FudmFzLWhlYWRlci1oZWlnaHQ7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIC8vIEVuZCBvZiBmaXggZm9yIEZpcmVmb3ggcGFpbnQgYnVnLlxufVxuXG5AbWl4aW4gb2ZmLWNhbnZhcy1ub3QtaW4tdXNlLXJ1bGVzKCkge1xuICAjb2ZmLWNhbnZhcy1jaGVja2JveCxcbiAgI29mZi1jYW52YXMtbGFiZWwsXG4gIC5vZmYtY2FudmFzIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG4gIC5vZmYtY2FudmFzLWhpZGRlbiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cbn1cblxuJW9mZi1jYW52YXMtc2xpZGUge1xuICBAaW5jbHVkZSB0cmFuc2l0aW9uLXByb3BlcnR5KCRvZmYtY2FudmFzLXNpZGUpO1xuICBAaW5jbHVkZSB0cmFuc2l0aW9uLWR1cmF0aW9uKC40cyk7XG59XG5cbkBpZiAkb2ZmLWNhbnZhcy1ub3QtaW4tdXNlIHtcbiAgQGlmICRvZmYtY2FudmFzLW5vdC1pbi11c2UgPT0gdHJ1ZSB7XG4gICAgQGluY2x1ZGUgb2ZmLWNhbnZhcy1ub3QtaW4tdXNlLXJ1bGVzKCk7XG4gIH1cbiAgQGVsc2Uge1xuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJG9mZi1jYW52YXMtbm90LWluLXVzZSkge1xuICAgICAgQGluY2x1ZGUgb2ZmLWNhbnZhcy1ub3QtaW4tdXNlLXJ1bGVzKCk7XG4gICAgfVxuICB9XG59XG5AZWxzZSB7XG4gIEBpbmNsdWRlIG9mZi1jYW52YXMtbm90LWluLXVzZS1ydWxlcygpO1xufVxuQGlmICRvZmYtY2FudmFzLWluLXVzZSB7XG4gIEBpZiAkb2ZmLWNhbnZhcy1pbi11c2UgPT0gdHJ1ZSB7XG4gICAgQGluY2x1ZGUgb2ZmLWNhbnZhcy1pbi11c2UtcnVsZXMoKTtcbiAgfVxuICBAZWxzZSBpZiAkb2ZmLWNhbnZhcy1pbi11c2UgIT0gZmFsc2Uge1xuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQoJG9mZi1jYW52YXMtaW4tdXNlKSB7XG4gICAgICBAaW5jbHVkZSBvZmYtY2FudmFzLWluLXVzZS1ydWxlcygpO1xuICAgIH1cbiAgfVxufVxuIiwiLy8gU2hvcnRoYW5kIG1peGluLiBTdXBwb3J0cyBtdWx0aXBsZSBwYXJlbnRoZXNlcy1kZWxpbWluYXRlZCB2YWx1ZXMgZm9yIGVhY2ggdmFyaWFibGUuXG4vLyBFeGFtcGxlOiBAaW5jbHVkZSB0cmFuc2l0aW9uIChhbGwgMnMgZWFzZS1pbi1vdXQpO1xuLy8gICAgICAgICAgQGluY2x1ZGUgdHJhbnNpdGlvbiAob3BhY2l0eSAxcyBlYXNlLWluIDJzLCB3aWR0aCAycyBlYXNlLW91dCk7XG4vLyAgICAgICAgICBAaW5jbHVkZSB0cmFuc2l0aW9uLXByb3BlcnR5ICh0cmFuc2Zvcm0sIG9wYWNpdHkpO1xuXG5AbWl4aW4gdHJhbnNpdGlvbigkcHJvcGVydGllcy4uLikge1xuICAvLyBGaXggZm9yIHZlbmRvci1wcmVmaXggdHJhbnNmb3JtIHByb3BlcnR5XG4gICRuZWVkcy1wcmVmaXhlczogZmFsc2U7XG4gICR3ZWJraXQ6ICgpO1xuICAkbW96OiAoKTtcbiAgJHNwZWM6ICgpO1xuXG4gIC8vIENyZWF0ZSBsaXN0cyBmb3IgdmVuZG9yLXByZWZpeGVkIHRyYW5zZm9ybVxuICBAZWFjaCAkbGlzdCBpbiAkcHJvcGVydGllcyB7XG4gICAgQGlmIG50aCgkbGlzdCwgMSkgPT0gXCJ0cmFuc2Zvcm1cIiB7XG4gICAgICAkbmVlZHMtcHJlZml4ZXM6IHRydWU7XG4gICAgICAkbGlzdDE6IC13ZWJraXQtdHJhbnNmb3JtO1xuICAgICAgJGxpc3QyOiAtbW96LXRyYW5zZm9ybTtcbiAgICAgICRsaXN0MzogKCk7XG5cbiAgICAgIEBlYWNoICR2YXIgaW4gJGxpc3Qge1xuICAgICAgICAkbGlzdDM6IGpvaW4oJGxpc3QzLCAkdmFyKTtcblxuICAgICAgICBAaWYgJHZhciAhPSBcInRyYW5zZm9ybVwiIHtcbiAgICAgICAgICAkbGlzdDE6IGpvaW4oJGxpc3QxLCAkdmFyKTtcbiAgICAgICAgICAkbGlzdDI6IGpvaW4oJGxpc3QyLCAkdmFyKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAkd2Via2l0OiBhcHBlbmQoJHdlYmtpdCwgJGxpc3QxKTtcbiAgICAgICRtb3o6ICAgIGFwcGVuZCgkbW96LCAgICAkbGlzdDIpO1xuICAgICAgJHNwZWM6ICAgYXBwZW5kKCRzcGVjLCAgICRsaXN0Myk7XG4gICAgfSBAZWxzZSB7XG4gICAgICAkd2Via2l0OiBhcHBlbmQoJHdlYmtpdCwgJGxpc3QsIGNvbW1hKTtcbiAgICAgICRtb3o6ICAgIGFwcGVuZCgkbW96LCAgICAkbGlzdCwgY29tbWEpO1xuICAgICAgJHNwZWM6ICAgYXBwZW5kKCRzcGVjLCAgICRsaXN0LCBjb21tYSk7XG4gICAgfVxuICB9XG5cbiAgQGlmICRuZWVkcy1wcmVmaXhlcyB7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiAkd2Via2l0O1xuICAgICAgIC1tb3otdHJhbnNpdGlvbjogJG1vejtcbiAgICAgICAgICAgIHRyYW5zaXRpb246ICRzcGVjO1xuICB9IEBlbHNlIHtcbiAgICBAaWYgbGVuZ3RoKCRwcm9wZXJ0aWVzKSA+PSAxIHtcbiAgICAgIEBpbmNsdWRlIHByZWZpeGVyKHRyYW5zaXRpb24sICRwcm9wZXJ0aWVzLCB3ZWJraXQgbW96IHNwZWMpO1xuICAgIH0gQGVsc2Uge1xuICAgICAgJHByb3BlcnRpZXM6IGFsbCAwLjE1cyBlYXNlLW91dCAwcztcbiAgICAgIEBpbmNsdWRlIHByZWZpeGVyKHRyYW5zaXRpb24sICRwcm9wZXJ0aWVzLCB3ZWJraXQgbW96IHNwZWMpO1xuICAgIH1cbiAgfVxufVxuXG5AbWl4aW4gdHJhbnNpdGlvbi1wcm9wZXJ0eSgkcHJvcGVydGllcy4uLikge1xuICAtd2Via2l0LXRyYW5zaXRpb24tcHJvcGVydHk6IHRyYW5zaXRpb24tcHJvcGVydHktbmFtZXMoJHByb3BlcnRpZXMsIFwid2Via2l0XCIpO1xuICAgICAtbW96LXRyYW5zaXRpb24tcHJvcGVydHk6IHRyYW5zaXRpb24tcHJvcGVydHktbmFtZXMoJHByb3BlcnRpZXMsIFwibW96XCIpO1xuICAgICAgICAgIHRyYW5zaXRpb24tcHJvcGVydHk6IHRyYW5zaXRpb24tcHJvcGVydHktbmFtZXMoJHByb3BlcnRpZXMsIGZhbHNlKTtcbn1cblxuQG1peGluIHRyYW5zaXRpb24tZHVyYXRpb24oJHRpbWVzLi4uKSB7XG4gIEBpbmNsdWRlIHByZWZpeGVyKHRyYW5zaXRpb24tZHVyYXRpb24sICR0aW1lcywgd2Via2l0IG1veiBzcGVjKTtcbn1cblxuQG1peGluIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uKCRtb3Rpb25zLi4uKSB7XG4gIC8vIGVhc2UgfCBsaW5lYXIgfCBlYXNlLWluIHwgZWFzZS1vdXQgfCBlYXNlLWluLW91dCB8IGN1YmljLWJlemllcigpXG4gIEBpbmNsdWRlIHByZWZpeGVyKHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uLCAkbW90aW9ucywgd2Via2l0IG1veiBzcGVjKTtcbn1cblxuQG1peGluIHRyYW5zaXRpb24tZGVsYXkoJHRpbWVzLi4uKSB7XG4gIEBpbmNsdWRlIHByZWZpeGVyKHRyYW5zaXRpb24tZGVsYXksICR0aW1lcywgd2Via2l0IG1veiBzcGVjKTtcbn1cbiIsIkBjaGFyc2V0IFwiVVRGLThcIjtcblxuLy8vIEEgbWl4aW4gZm9yIGdlbmVyYXRpbmcgdmVuZG9yIHByZWZpeGVzIG9uIG5vbi1zdGFuZGFyZGl6ZWQgcHJvcGVydGllcy5cbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkcHJvcGVydHlcbi8vLyAgIFByb3BlcnR5IHRvIHByZWZpeFxuLy8vXG4vLy8gQHBhcmFtIHsqfSAkdmFsdWVcbi8vLyAgIFZhbHVlIHRvIHVzZVxuLy8vXG4vLy8gQHBhcmFtIHtMaXN0fSAkcHJlZml4ZXNcbi8vLyAgIFByZWZpeGVzIHRvIGRlZmluZVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFVzYWdlXG4vLy8gICAuZWxlbWVudCB7XG4vLy8gICAgIEBpbmNsdWRlIHByZWZpeGVyKGJvcmRlci1yYWRpdXMsIDEwcHgsIHdlYmtpdCBtcyBzcGVjKTtcbi8vLyAgIH1cbi8vL1xuLy8vIEBleGFtcGxlIGNzcyAtIENTUyBPdXRwdXRcbi8vLyAgIC5lbGVtZW50IHtcbi8vLyAgICAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAxMHB4O1xuLy8vICAgICAtbW96LWJvcmRlci1yYWRpdXM6IDEwcHg7XG4vLy8gICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4vLy8gICB9XG4vLy9cbi8vLyBAcmVxdWlyZSB7dmFyaWFibGV9ICRwcmVmaXgtZm9yLXdlYmtpdFxuLy8vIEByZXF1aXJlIHt2YXJpYWJsZX0gJHByZWZpeC1mb3ItbW96aWxsYVxuLy8vIEByZXF1aXJlIHt2YXJpYWJsZX0gJHByZWZpeC1mb3ItbWljcm9zb2Z0XG4vLy8gQHJlcXVpcmUge3ZhcmlhYmxlfSAkcHJlZml4LWZvci1vcGVyYVxuLy8vIEByZXF1aXJlIHt2YXJpYWJsZX0gJHByZWZpeC1mb3Itc3BlY1xuXG5AbWl4aW4gcHJlZml4ZXIoJHByb3BlcnR5LCAkdmFsdWUsICRwcmVmaXhlcykge1xuICBAZWFjaCAkcHJlZml4IGluICRwcmVmaXhlcyB7XG4gICAgQGlmICRwcmVmaXggPT0gd2Via2l0IHtcbiAgICAgIEBpZiAkcHJlZml4LWZvci13ZWJraXQge1xuICAgICAgICAtd2Via2l0LSN7JHByb3BlcnR5fTogJHZhbHVlO1xuICAgICAgfVxuICAgIH0gQGVsc2UgaWYgJHByZWZpeCA9PSBtb3oge1xuICAgICAgQGlmICRwcmVmaXgtZm9yLW1vemlsbGEge1xuICAgICAgICAtbW96LSN7JHByb3BlcnR5fTogJHZhbHVlO1xuICAgICAgfVxuICAgIH0gQGVsc2UgaWYgJHByZWZpeCA9PSBtcyB7XG4gICAgICBAaWYgJHByZWZpeC1mb3ItbWljcm9zb2Z0IHtcbiAgICAgICAgLW1zLSN7JHByb3BlcnR5fTogJHZhbHVlO1xuICAgICAgfVxuICAgIH0gQGVsc2UgaWYgJHByZWZpeCA9PSBvIHtcbiAgICAgIEBpZiAkcHJlZml4LWZvci1vcGVyYSB7XG4gICAgICAgIC1vLSN7JHByb3BlcnR5fTogJHZhbHVlO1xuICAgICAgfVxuICAgIH0gQGVsc2UgaWYgJHByZWZpeCA9PSBzcGVjIHtcbiAgICAgIEBpZiAkcHJlZml4LWZvci1zcGVjIHtcbiAgICAgICAgI3skcHJvcGVydHl9OiAkdmFsdWU7XG4gICAgICB9XG4gICAgfSBAZWxzZSAge1xuICAgICAgQHdhcm4gXCJVbnJlY29nbml6ZWQgcHJlZml4OiAjeyRwcmVmaXh9XCI7XG4gICAgfVxuICB9XG59XG5cbkBtaXhpbiBkaXNhYmxlLXByZWZpeC1mb3ItYWxsKCkge1xuICAkcHJlZml4LWZvci13ZWJraXQ6ICAgIGZhbHNlICFnbG9iYWw7XG4gICRwcmVmaXgtZm9yLW1vemlsbGE6ICAgZmFsc2UgIWdsb2JhbDtcbiAgJHByZWZpeC1mb3ItbWljcm9zb2Z0OiBmYWxzZSAhZ2xvYmFsO1xuICAkcHJlZml4LWZvci1vcGVyYTogICAgIGZhbHNlICFnbG9iYWw7XG4gICRwcmVmaXgtZm9yLXNwZWM6ICAgICAgZmFsc2UgIWdsb2JhbDtcbn1cbiIsIi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gRGVmYXVsdCBWYXJpYWJsZXNcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuJEJyZWFrcG9pbnQtU2V0dGluZ3M6IChcbiAgJ2RlZmF1bHQgbWVkaWEnOiBhbGwsXG4gICdkZWZhdWx0IGZlYXR1cmUnOiBtaW4td2lkdGgsXG4gICdkZWZhdWx0IHBhaXInOiB3aWR0aCxcblxuICAnZm9yY2UgYWxsIG1lZGlhIHR5cGUnOiBmYWxzZSxcbiAgJ3RvIGVtcyc6IGZhbHNlLFxuICAndHJhbnNmb3JtIHJlc29sdXRpb25zJzogdHJ1ZSxcblxuICAnbm8gcXVlcmllcyc6IGZhbHNlLFxuICAnbm8gcXVlcnkgZmFsbGJhY2tzJzogZmFsc2UsXG5cbiAgJ2Jhc2UgZm9udCBzaXplJzogMTZweCxcblxuICAnbGVnYWN5IHN5bnRheCc6IGZhbHNlXG4pO1xuXG4kYnJlYWtwb2ludDogKCkgIWRlZmF1bHQ7XG5cbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gSW1wb3J0c1xuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5AaW1wb3J0IFwiYnJlYWtwb2ludC9zZXR0aW5nc1wiO1xuQGltcG9ydCAnYnJlYWtwb2ludC9jb250ZXh0JztcbkBpbXBvcnQgJ2JyZWFrcG9pbnQvaGVscGVycyc7XG5AaW1wb3J0ICdicmVha3BvaW50L3BhcnNlcnMnO1xuQGltcG9ydCAnYnJlYWtwb2ludC9uby1xdWVyeSc7XG5cbkBpbXBvcnQgJ2JyZWFrcG9pbnQvcmVzcG9uZC10byc7XG5cbkBpbXBvcnQgXCJicmVha3BvaW50L2xlZ2FjeS1zZXR0aW5nc1wiO1xuXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIEJyZWFrcG9pbnQgTWl4aW5cbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuXG5AbWl4aW4gYnJlYWtwb2ludCgkcXVlcnksICRuby1xdWVyeTogZmFsc2UpIHtcbiAgQGluY2x1ZGUgbGVnYWN5LXNldHRpbmdzLXdhcm5pbmc7XG5cbiAgLy8gUmVzZXQgY29udGV4dHNcbiAgQGluY2x1ZGUgcHJpdmF0ZS1icmVha3BvaW50LXJlc2V0LWNvbnRleHRzKCk7XG5cbiAgJGJyZWFrcG9pbnQ6IGJyZWFrcG9pbnQoJHF1ZXJ5LCBmYWxzZSk7XG5cbiAgJHF1ZXJ5LXN0cmluZzogbWFwLWdldCgkYnJlYWtwb2ludCwgJ3F1ZXJ5Jyk7XG4gICRxdWVyeS1mYWxsYmFjazogbWFwLWdldCgkYnJlYWtwb2ludCwgJ2ZhbGxiYWNrJyk7XG5cbiAgJHByaXZhdGUtYnJlYWtwb2ludC1jb250ZXh0LWhvbGRlcjogbWFwLWdldCgkYnJlYWtwb2ludCwgJ2NvbnRleHQgaG9sZGVyJykgIWdsb2JhbDtcbiAgJHByaXZhdGUtYnJlYWtwb2ludC1xdWVyeS1jb3VudDogbWFwLWdldCgkYnJlYWtwb2ludCwgJ3F1ZXJ5IGNvdW50JykgIWdsb2JhbDtcblxuICAvLyBBbGxvdyBmb3IgYW4gYXMtbmVlZGVkIG92ZXJyaWRlIG9yIHVzYWdlIG9mIG5vIHF1ZXJ5IGZhbGxiYWNrLlxuICBAaWYgJG5vLXF1ZXJ5ICE9IGZhbHNlIHtcbiAgICAkcXVlcnktZmFsbGJhY2s6ICRuby1xdWVyeTtcbiAgfVxuXG4gIEBpZiAkcXVlcnktZmFsbGJhY2sgIT0gZmFsc2Uge1xuICAgICRjb250ZXh0LXNldHRlcjogcHJpdmF0ZS1icmVha3BvaW50LXNldC1jb250ZXh0KCduby1xdWVyeScsICRxdWVyeS1mYWxsYmFjayk7XG4gIH1cblxuICAvLyBQcmludCBPdXQgUXVlcnkgU3RyaW5nXG4gIEBpZiBub3QgYnJlYWtwb2ludC1nZXQoJ25vIHF1ZXJpZXMnKSB7XG4gICAgQG1lZGlhICN7JHF1ZXJ5LXN0cmluZ30ge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9XG5cbiAgQGlmIGJyZWFrcG9pbnQtZ2V0KCdubyBxdWVyeSBmYWxsYmFja3MnKSAhPSBmYWxzZSBvciBicmVha3BvaW50LWdldCgnbm8gcXVlcmllcycpID09IHRydWUge1xuXG4gICAgJHR5cGU6IHR5cGUtb2YoYnJlYWtwb2ludC1nZXQoJ25vIHF1ZXJ5IGZhbGxiYWNrcycpKTtcbiAgICAkcHJpbnQ6IGZhbHNlO1xuXG4gICAgQGlmICgkdHlwZSA9PSAnYm9vbCcpIHtcbiAgICAgICRwcmludDogdHJ1ZTtcbiAgICB9XG4gICAgQGVsc2UgaWYgKCR0eXBlID09ICdzdHJpbmcnKSB7XG4gICAgICBAaWYgJHF1ZXJ5LWZhbGxiYWNrID09IGJyZWFrcG9pbnQtZ2V0KCdubyBxdWVyeSBmYWxsYmFja3MnKSB7XG4gICAgICAgICRwcmludDogdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG4gICAgQGVsc2UgaWYgKCR0eXBlID09ICdsaXN0Jykge1xuICAgICAgQGVhY2ggJHdyYXBwZXIgaW4gYnJlYWtwb2ludC1nZXQoJ25vIHF1ZXJ5IGZhbGxiYWNrcycpIHtcbiAgICAgICAgQGlmICRxdWVyeS1mYWxsYmFjayA9PSAkd3JhcHBlciB7XG4gICAgICAgICAgJHByaW50OiB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gV3JpdGUgRmFsbGJhY2tcbiAgICBAaWYgKCRxdWVyeS1mYWxsYmFjayAhPSBmYWxzZSkgYW5kICgkcHJpbnQgPT0gdHJ1ZSkge1xuICAgICAgJHR5cGUtZmFsbGJhY2s6IHR5cGUtb2YoJHF1ZXJ5LWZhbGxiYWNrKTtcblxuICAgICAgQGlmICgkdHlwZS1mYWxsYmFjayAhPSAnYm9vbCcpIHtcbiAgICAgICAgI3skcXVlcnktZmFsbGJhY2t9ICYge1xuICAgICAgICAgIEBjb250ZW50O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBAZWxzZSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIEBpbmNsdWRlIHByaXZhdGUtYnJlYWtwb2ludC1yZXNldC1jb250ZXh0cygpO1xufVxuXG5cbkBtaXhpbiBtcSgkcXVlcnksICRuby1xdWVyeTogZmFsc2UpIHtcbiAgQGluY2x1ZGUgYnJlYWtwb2ludCgkcXVlcnksICRuby1xdWVyeSkge1xuICAgIEBjb250ZW50O1xuICB9XG59XG4iLCIvKipcbiAqIEBmaWxlXG4gKiBzYXNzL3BhcnRpYWxzL2xheW91dC90ZW1wbGF0ZXMvX3BhZ2UtLWZyb250LnNjc3NcbiAqXG4gKiBAc2VlIHBhZ2UuaHRtbC50d2lnXG4gKi9cblxuLnBhZ2UtLWZyb250IHtcbiAgcGFkZGluZy1ib3R0b206IDFyZW07XG4gIC5jb21tZW50LWFkZCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuLnZpZXctLWZyb250cGFnZSB7XG4gIC52aWV3cy1yb3cgKyAudmlld3Mtcm93IHtcbiAgICBtYXJnaW4tdG9wOiA0cmVtO1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0= */
